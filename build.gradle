plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.asciidoctor.jvm.convert" version "3.3.2"  // (1) gradle 7 이상부터 JVM
}

group = 'com.cosain'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

configurations {
	asciidoctorExtensions // (2) (3)에서 dependencies에 적용한 asciidoctor를 구성에 추가
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	snippetsDir = file('build/generated-snippets') // 변수 선언
	p6SpyVersion = "1.9.0"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// DB
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:${p6SpyVersion}"

	// 테스트에서 lombok 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// REST Docs
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor' // (3) 스니펫 조각들 연동할 수 있는 의존성
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // (4) mockMvc 사용(@WebMvcTest 활용, Controller Layer 단위 테스트)

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Yaml Resource Bundle
	implementation 'dev.akkinoc.util:yaml-resource-bundle:2.8.1'
}

test {
	outputs.dir snippetsDir // snippetsDir 를 출력으로 구성
	useJUnitPlatform()
}

asciidoctor { // 작업 구성 설정 - 알아서..
	dependsOn test // test 작업 이후에 동작
	configurations 'asciidoctorExtensions'
	inputs.dir snippetsDir // snippetsDir 를 입력으로 구성

}

task copyDocument(type: Copy) { // asciidoctor 작업 : copy
	dependsOn asciidoctor // asciidoctor 작업 이후에 동작

	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build { // copyDocument 작업 이후 build
	dependsOn copyDocument
}
