spring:
  profiles:
    active: test
  datasource:
    url: jdbc:mysql://localhost:3306/trilo_db_test
    username: test
    password: db1004
    driver-class-name: com.mysql.cj.jdbc.Driver

  data:
    redis:
      port: 6379
      host: localhost

  sql:
    init:
      mode: always
      schema-locations: classpath:test_schema.sql

  jpa:
    properties:
      hibernate:
        # show_sql: true # sout으로 하이버네이트 실행 SQL을 남기는데 이는 아래의 spring.logging.level.org.hibernate.SQL 옵션에서 log로 대체
        format_sql: true # sql을 로깅할 때 예쁘게 보여줌
        create_empty_composites.enabled: true

logging:
  level:
    org.hibernate.SQL: debug # 하이버네이트 실행 SQL을 logger를 통해 남긴다.
#    org.hibernate.type: trace # 쿼리 parameter의 값을 로그로 남김. 대체재로 p6spy가 있다. 배포환경에서는 사용하지 성능 상 문제가 있다면 사용할지 말지를 고민하는 것이 좋다.

jwt:
  secret-key: testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttest
  access-token-expiry: 1800000 # 1시간... ? 하루 추후 논의 : FE분들과도 논의
  refresh-token-expiry: 10800000 # 3시간... ? 한달

oauth2:
  kakao:
    client-id: secret
    token-uri: https://kauth.kakao.com/oauth/token
    user-info-uri: https://kapi.kakao.com/v2/user/me

  naver:
    grant_type: authorization_code
    client-id: secret
    client-secret: secret
    token_uri: https://nid.naver.com/oauth2.0/token
    user-info-uri: https://openapi.naver.com/v1/nid/me

  google:
    grant_type: authorization_code
    client-id: secret
    client-secret: secret
    token-uri: https://oauth2.googleapis.com/token
    user-info-uri: https://www.googleapis.com/oauth2/v1/userinfo

deploy-module:
  version: 0.0.7

cloud:
  aws:
    credentials: # s3 사용자 접근 정보
      access-key: access-key
      secret-key: secret-key
    region: # 리전
      static: region
    stack:
      auto: false
    s3:
      bucket-name: s3-bucket-name
      bucket-path: xxx.bucketpath.com/
